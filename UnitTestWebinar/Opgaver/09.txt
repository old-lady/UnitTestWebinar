public static class Calculator
{
	/// <summary>
	/// Determines whether the specified string is valid email.
	/// </summary>
	/// <param name="strIn">The string input.</param>
	/// <returns>True, when input email is valid, otherwise false.</returns>
	public static bool IsValidEmail(string strIn)
	{
		if (string.IsNullOrEmpty(strIn))
		{
			return false;
		}

		// Return true if strIn is in valid e-mail format. 
		try
		{
			return Regex.IsMatch(
				strIn,
				@"^(?("")("".+?(?<!\\)""@)|(([0-9a-z]((\.(?!\.))|[-!#\$%&'\*\+/=\?\^`\{\}\|~\w])*)(?<=[0-9a-z])@))"
				+ @"(?(\[)(\[(\d{1,3}\.){3}\d{1,3}\])|(([0-9a-z][-\w]*[0-9a-z]*\.)+[a-z0-9][\-a-z0-9]{0,22}[a-z0-9]))$",
				RegexOptions.IgnoreCase,
				TimeSpan.FromMilliseconds(250));
		}
		catch (RegexMatchTimeoutException)
		{
			return false;
		}
	}
}

// Test:

[TestClass]
public class Tests
{
    /// <summary>
    /// Verifies, that IsValidEmail method correctly verifies whether provided string is valid email.
    /// </summary>
    [TestMethod]
    public void IsValidEmail_ValidEmail_TrueIsreturned()
    {
   
    }
}